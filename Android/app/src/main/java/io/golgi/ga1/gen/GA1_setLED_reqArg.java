/* IS_AUTOGENERATED_SO_ALLOW_AUTODELETE=YES */
/* The previous line is to allow auto deletion */

package io.golgi.ga1.gen;

import java.util.Hashtable;
import java.util.ArrayList;
import java.util.Iterator;
import com.openmindnetworks.golgi.JavaType;
import com.openmindnetworks.golgi.GolgiPayload;
import com.openmindnetworks.golgi.GolgiJSONException;
import com.openmindnetworks.golgi.GolgiJSONPayload;
import com.openmindnetworks.golgi.GolgiJSONValue;
import com.openmindnetworks.golgi.B64;
import com.openmindnetworks.golgi.api.GolgiException;
import com.openmindnetworks.golgi.api.GolgiAPI;
import android.os.Parcel;
import android.os.Parcelable;

public class GA1_setLED_reqArg implements Parcelable
{
    private static final String _golgiStructName = "GA1_setLED_reqArg";

    public static final boolean urlEncodeable = true;

    public int describeContents(){
        return 0;
    }

    public void writeToParcel(Parcel dest, int flags){
        dest.writeString(this.serialise().toString());
    }

    public static final Parcelable.Creator<GA1_setLED_reqArg> CREATOR = new Parcelable.Creator<GA1_setLED_reqArg>() {
        public GA1_setLED_reqArg createFromParcel(Parcel in) {
            return new GA1_setLED_reqArg(in);
        }
        public GA1_setLED_reqArg[] newArray(int size) {
            return new GA1_setLED_reqArg[size];
        }
    };
    private GA1_setLED_reqArg(Parcel in) {
        this(in.readString());
    }

    private boolean corrupt = false;

    public boolean isCorrupt() {
        return corrupt;
    }

    public void setCorrupt() {
        corrupt = true;
    }

    private boolean stateIsSet = false;
    private int state;

    public int getState(){
        return state;
    }
    
    public boolean stateIsSet(){
        return stateIsSet;
    }
    
    public void setState(int state){
        this.state = state;
        this.stateIsSet = true;
    }
    

    public StringBuffer serialise(){
        return serialise(null);
    }

    public StringBuffer serialise(StringBuffer sb){
        return serialise("", sb);
    }

    public StringBuffer serialise(String prefix, StringBuffer sb){
        if(sb == null){
            sb = new StringBuffer();
        }

        if(this.stateIsSet){
            sb.append(prefix + "1: " + this.state+"\n");
        }

        return sb;
    }

    public void deserialise(String str){
        deserialise(JavaType.createPayload(str));
    }

    private void deserialise(GolgiPayload payload){
        if(!isCorrupt() && payload.containsFieldKey("1:")){
            String str = payload.getField("1:");
            try{
                setState(Integer.valueOf(str));
            }
            catch(NumberFormatException nfe){
                setCorrupt();
            }
        }
        else{
            setCorrupt();
        }
        
    }

    private void fromJSON(String jsStr) throws GolgiJSONException{
        GolgiJSONPayload jp = new GolgiJSONPayload(jsStr);
        jp.parse();
        fromJSON(jp);
    }

    private void fromJSON(GolgiJSONPayload jp) throws GolgiJSONException{
        if(!isCorrupt()){
            Integer iVal = jp.getIntForTag("state");
            if(iVal != null){
                setState(iVal.intValue());
            }
            else{
                setCorrupt();
                throw new GolgiJSONException(GolgiException.GOLGI_ERRTYPE_INCORRECT_JSON, "Missing required field: 'state' in " + _golgiStructName);
            }
        }
    }

    public StringBuffer toJSON(StringBuffer sb){
        String _comma = "";
        if(sb == null){
            sb = new StringBuffer();
        }
        sb.append('{');

        if(this.stateIsSet){
            sb.append(_comma + JavaType.genJSONTag("state"));
            sb.append(state);
            _comma = ",";
        }
        sb.append('}');

        return sb;
    }

    public StringBuffer toJSON(){
        return toJSON(null);
    }
    public GA1_setLED_reqArg(){
        this(true);
    }

    public GA1_setLED_reqArg(boolean isSetDefault){
        super();
        stateIsSet = isSetDefault;
        state = 0;
    }

    public GA1_setLED_reqArg(GolgiPayload payload){
        this(false);
        deserialise(payload);
    }

    public GA1_setLED_reqArg(String payload){
        this(JavaType.createPayload(payload));
    }

    public static GA1_setLED_reqArg fromJSONString(String jsStr) throws GolgiJSONException{
        GA1_setLED_reqArg inst = null;
        if(jsStr != null){
            inst = new GA1_setLED_reqArg(false);
            inst.fromJSON(jsStr);
        }
        return (inst == null || inst.isCorrupt()) ? null : inst;
    }

    public static GA1_setLED_reqArg fromJSONPayload(GolgiJSONPayload jPayload) throws GolgiJSONException{
        GA1_setLED_reqArg inst = null;
        if(jPayload != null){
            inst = new GA1_setLED_reqArg(false);
            inst.fromJSON(jPayload);
        }
        return (inst == null || inst.isCorrupt()) ? null : inst;
    }

}
